---
import Layout from '../layouts/Layout.astro';
import { XataClient } from '.././xata';

const xata = new XataClient({
  apiKey: import.meta.env.XATA_API_KEY,
  branch: import.meta.env.XATA_BRANCH
});

const messages = [];
let messageSent = false; // Add a variable to track whether the message has been sent

if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const action = data.get('action'); // Get the value of the 'action' field


      // Fetch users sorted by user_id in descending order
      const { records: hh_contact_us } = await xata.db.hh_contact_us
      .sort( 'contact_id', 'desc' )
      .getPaginated({ pagination: { size: 1 } });

    // Calculate the new user_id
      const newId = hh_contact_us.length > 0 ? hh_contact_us[0].contact_id + 1 : 1;


    // Check if the action is 'contactFormSubmit'
    if (action === 'contactFormSubmit') {
      const inputName = String(data.get("name"));
      const inputEmail = String(data.get("email"));
      const inputPhone = String(data.get("phone"));
      const inputMessage = String(data.get("message"));
      const userPhone = parseInt(inputPhone);
      
      const newUser = await xata.db.hh_contact_us.create({
        name: inputName,
        email: inputEmail,
        phone: userPhone,
        message: inputMessage,
        contact_id: newId
        
      });

      console.log("Contact form submission:", messages);
      messageSent = true;
    }

  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}
// Get the current hour
const currentHour = new Date().getHours();

// Determine the background image based on the time of day
const backgroundImage = currentHour >= 6 && currentHour < 18
  ? "../images/background4.gif" // Daytime background
  : "../images/background3.gif"; // Nighttime background
---

<style define:vars={{ backgroundImage }}>
body  {
    background-image: url('https://i.imgur.com/iEQcz0Z.jpeg');
  background-size:cover;
        -webkit-animation: slidein 100s;
        animation: slidein 100s;

        -webkit-animation-fill-mode: forwards;
        animation-fill-mode: forwards;

        -webkit-animation-iteration-count: infinite;
        animation-iteration-count: infinite;

        -webkit-animation-direction: alternate;
        animation-direction: alternate;              
}

@-webkit-keyframes slidein {
from {background-position: top; background-size:3000px; }
to {background-position: -100px 0px;background-size:2750px;}
}

@keyframes slidein {
from {background-position: top;background-size:3000px; }
to {background-position: -100px 0px;background-size:2750px;}

}
  body {
    font-family: Arial, sans-serif;
    color:  #fff; 
  }

  .container {
    max-width: 400px;
    margin: 50px auto;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    width: 100%;
    display: flex;
    overflow: auto;
    align-items: center;
    flex-direction: column;
    justify-content: center;
    background-color: #6d7ab7;
  }

  label {
    display: block;
    margin-bottom: 8px;
    font-weight: bold;
  }

  input {
    width: 100%;
    padding: 8px;
    margin-bottom: 16px;
    box-sizing: border-box;
  }

  button {
    background-color: #4caf50;
    color: #fff;
    padding: 10px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }

  button:hover {
    background-color: #45a049;
  }

  .confirmation {
    color: white;
  }
  .confirmation-message {
      background-color: #4CAF50; /* Green background */
      color: #fff; /* White text */
      padding: 10px;
      border-radius: 4px;
      margin-top: 1px;
      text-align: center;
      
    }

    .form-container {
      background-color: #535C91; 
      border-radius: 8px; /* Rounded corners */
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Shadow effect */
      padding: 20px;
      max-width: 500px; /* Limit width for better readability */
      margin: 0 auto; /* Center the form horizontally */
    }
  
    .form-header {
      text-align: center;
      margin-bottom: 20px;
    }
  
    .form-header h2 {
      margin-top: 0;
      color: #070F2B; /* Green color for headers */
    }
  
    .form-group {
      margin-bottom: 15px;
    }
  
    .form-group label {
      display: block;
      font-weight: bold;
    }
  
    .form-group input,
    .form-group select,
    .form-group textarea {
      width: 100%;
      padding: 10px;
      border: 1px solid #ccc; /* Light gray border */
      border-radius: 4px;
      box-sizing: border-box;
      font-size: 16px;
    }
  
    .form-group select {
      
      background-position: right 10px top 50%;
      background-size: 20px;
      padding-right: 40px; /* Space for dropdown arrow */
    }
  
    .form-group textarea {
      height: 100px; /* Set a fixed height for textarea */
      max-width: 100%;
    }
  
    .form-group button {
      background-color: #4CAF50; /* Green background for button */
      color: #fff; /* White text color */
      padding: 10px 20px;
      border: none;
      border-radius: 4px;
      font-size: 16px;
      cursor: pointer;
      width: 100%;
    }
  
    .form-group button:hover {
      background-color: #45a049; /* Darker green on hover */
    }    
</style>

<Layout title='Contact Us'>
  {messageSent && 
    <div class="confirmation-message">
      <p class="confirmation">Message has been sent!</p>
    </div>
  }
  
  <div class="form-container">
    <h2 style="text-align: center;">Contact Us</h2>
    <form method="POST">
      <!-- Add a hidden input field to specify the action -->
      <input type="hidden" name="action" value="contactFormSubmit">
      <div class="form-group">
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" required />
      </div>
      
      <div class="form-group">
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required />
      </div>
      <div class="form-group">
        <label for="phone">Phone Number:</label>
        <input type="number" id="phone" name="phone" required />
      </div>
      <div class="form-group">
        <label for="message">Message:</label>
        <textarea id="message" name="message" style="width: 100%; height: 100px; resize: none;" rows="4" cols="50" required ></textarea>
      </div>
      <div class="form-group">
        <button type="submit">Submit</button>
      </div>
    </form>
  </div>
</Layout>