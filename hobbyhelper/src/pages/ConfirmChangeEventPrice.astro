---
import Layout from '../layouts/Layout.astro';
import SignoutButton from '../components/SignoutButton.astro';
import { userInfo, getUserInfo, isLoggedIn, clearUserInfo  } from '../components/userInformation.js';
import { XataClient } from '../xata.js';
// Redirect to hobby home page if not logged in 
const isAdmin = isLoggedIn.get() && userInfo.get().userType === 'admin';
if (!isAdmin) {
  return Astro.redirect('/HobbyHome'); 
};

const xata = new XataClient({
  apiKey: import.meta.env.XATA_API_KEY,
  branch: import.meta.env.XATA_BRANCH
});
const { records } = await xata.db.events.getPaginated({
  pagination: {
    size: 50
  }
})


if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const inputPrice = String(data.get("newPrice")).trim(); // Trim the string to remove leading/trailing spaces
    const newPrice = parseFloat(inputPrice); // Parse the trimmed string to an intege
    const searchQuery = Astro.request.url;
    if (searchQuery.includes("change=")) {
  const startIndex = searchQuery.indexOf("change=") + 7;
  let changeId = parseInt(searchQuery.slice(startIndex), 10);
  console.log(changeId);
  console.log(newPrice);
  const eventToChange = await xata.db.events.filter({
  event_id: changeId
}).getMany();

if (eventToChange.length > 0) {
  
        
          const backlogIdToUpdate = eventToChange[0].id;
          const strPrice = String(newPrice)
          await xata.db.events.update(backlogIdToUpdate, { event_price: strPrice });
          console.log(`Price of event with ID ${changeId} has been updated to ${newPrice}.`);
          return Astro.redirect('/ManageEvents/');
        } else {
          console.log(`Invalid quantity for event with ID ${changeId}.`);
        }
      } 
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}

---  

<style>
  body {
    background-image: url("../images/background2.gif");
    font-family: Arial, sans-serif;
    background-size: cover;
  }

  .container {
    max-width: 400px;
    margin: 50px auto;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    width: 100%;
    display: flex;
    overflow: auto;
    align-items: center;
    flex-direction: column;
    justify-content: center;
    background-color: #6d7ab7;
  }
  button {
    background-color: #4caf50;
    color: #fff;
    padding: 10px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }

  button:hover {
    background-color: #45a049;
  }
  .delete-button {
    background-color: #af4c4c;
    color: #fff;
    padding: 10px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    
  }

  .delete-button:hover {
    background-color: #a04545;
  }

  .confirmation {
    color: white;
  }
  label {
    display: block;
    margin-bottom: 8px;
    font-weight: bold;
  }

  button {
    background-color: #4caf50;
    color: #fff;
    padding: 10px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }

  button:hover {
    background-color: #45a049;
  }

  .confirmation {
    color: white;
  }

  .error-message {
    background-color: red;
    color: white;
    padding: 10px;
    border-radius: 4px;
    margin-top: 1px;
    text-align: center;
  }
</style>


<Layout title='Change Event Price'>

  <div class="background"></div>

  <div class="container">
    <h2 style="text-align: center; color:white">Confirm change event Price?</h2>
    
    <form method="POST">
      <p style="color: white;">Enter the new Price in $CAD:</p>
      <input type="number" id="newPrice" name="newPrice"  step=".01" />
        
        <button class="delete-button"type="submit">Change Price</button>
        
      </form>
      <br/>
      <button class="button" onclick="window.location.href='/ManageProducts'">Nah, ill keep it!</button>
    
 
</Layout>


