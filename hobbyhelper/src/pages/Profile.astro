---
import Layout from '../layouts/Layout.astro';
import SignoutButton from '../components/SignoutButton.astro';
import { userInfo, getUserInfo, isLoggedIn, clearUserInfo } from '../components/userInformation.js';
import { XataClient } from '.././xata';

const xata = new XataClient({
  apiKey: import.meta.env.XATA_API_KEY,
  branch: import.meta.env.XATA_BRANCH
});

const { records: hh_user } = await xata.db.hh_user.getPaginated({
  pagination: {
    size: 50
  }
});

const { records: categories } = await xata.db.product_category.getPaginated({
  pagination: {
    size: 50
  }
});


console.log("Signed-in User ID:", userInfo.get().id);

const signedInUserId = parseInt(userInfo.get().id);
const filteredUser = hh_user.find(user => user.user_id === signedInUserId);

console.log("Filtered User:", filteredUser);


if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    
    const updateAge = String(data.get("age"));
    const updateFavHobby = String(data.get("favouriteHobby"));
    const updateBio = String(data.get("bio")); 

    const userAge = parseInt(updateAge);
    
    const user = await xata.db.hh_user.update(filteredUser.id, {
      age: userAge,
      favourite_hobby: updateFavHobby,
      bio : updateBio,
    });
   
    return Astro.redirect('/Profile');


  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}



---

<style>
  body {
    font-family: Arial, sans-serif;
    color:  #fff; 
  }

  .container {
    max-width: 400px;
    margin: 50px auto;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    width: 100%;
    display: flex;
    overflow: auto;
    align-items: center;
    flex-direction: column;
    justify-content: center;
    background-color: #6d7ab7;
  }

  .background {
    width: 100%;
    height: 100vh;
    position: fixed;
    top: 0;
    left: 0;
    z-index: -1;
  }

  label {
    display: block;
    margin-bottom: 8px;
    font-weight: bold;
  }

  button {
    background-color: #4caf50;
    color: #fff;
    padding: 10px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }

  button:hover {
    background-color: #45a049;
  }

  .confirmation {
    color: white;
  }

  .error-message {
    background-color: red;
    color: white;
    padding: 10px;
    border-radius: 4px;
    margin-top: 1px;
    text-align: center;
  }

  .form-container {
      background-color: #535C91; 
      border-radius: 8px; /* Rounded corners */
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Shadow effect */
      padding: 20px;
      max-width: 500px; /* Limit width for better readability */
      margin: 0 auto; /* Center the form horizontally */
    }
  
    .form-header {
      text-align: center;
      margin-bottom: 20px;
    }
  
    .form-header h2 {
      margin-top: 0;
      color: #070F2B; /* Green color for headers */
    }
  
    .form-group {
      margin-bottom: 15px;
    }
  
    .form-group label {
      display: block;
      font-weight: bold;
    }
  
    .form-group input,
    .form-group select,
    .form-group textarea {
      width: 100%;
      padding: 10px;
      border: 1px solid #ccc; /* Light gray border */
      border-radius: 4px;
      box-sizing: border-box;
      font-size: 16px;
    }
  
    .form-group select {
      
      background-position: right 10px top 50%;
      background-size: 20px;
      padding-right: 40px; /* Space for dropdown arrow */
    }
  
    .form-group textarea {
      height: 100px; /* Set a fixed height for textarea */
      max-width: 100%;
    }
  
    .form-group button {
      background-color: #4CAF50; /* Green background for button */
      color: #fff; /* White text color */
      padding: 10px 20px;
      border: none;
      border-radius: 4px;
      font-size: 16px;
      cursor: pointer;
      width: 100%;
    }
  
    .form-group button:hover {
      background-color: #45a049; /* Darker green on hover */
    }
    .backlog-button {
    background-color: #007bff; /* Nice blue color */
    color: white; /* Text color */
    padding: 10px 20px; /* Adjust padding as needed */
    border: none;
    border-radius: 5px;
    width: 15%;
    cursor: pointer;
    display: block; /* Ensure it spans the full width */
    margin: 0 auto; /* Center horizontally */
}

.backlog-button:hover {
    background-color: #0056b3; /* Darker shade of blue on hover */
}
</style>

<Layout title='Profile'>
  <div class="background"></div>

  <div class="form-container">
    <div class="form header">
      <h2 style="text-align: center;">Profile</h2>
    </div>
    <form method="POST">
      <div class="form-group">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" required readonly value={filteredUser ? filteredUser.username : ''}>
      </div>
      <div class="form-group">
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required readonly value={filteredUser ? filteredUser.email_address : ''}>
      </div>
      <div class="form-group">
        <label for="phone">Phone Number:</label>
        <input type="number" id="phone" name="phone" value={filteredUser ? filteredUser.phone_number : '' } readonly>
      </div>
      <div class="form-group">
        <label for="age">Age:</label>
        <input type="number" id="age" name="age" min="0" value={filteredUser ? filteredUser.age : ''}>
      </div>
      <div class="form-group">
        <label for="favouriteHobby">Favorite Hobby:</label>
        <select id="favouriteHobby" name="favouriteHobby">
          {categories.map(category => (
            <option value={category.category_name} selected={filteredUser && filteredUser.favourite_hobby === category.category_name}>
              {category.category_name}
            </option>
          ))}
        </select>
      </div>
      <div class="form-group">
      <label for="bio">Bio:</label>
      <textarea id="bio" name="bio" style="width: 100%; height: 100px; resize: none;" rows="4" cols="50" required>{filteredUser ? filteredUser.bio : ''}</textarea>
      </div>
      <div class="form-group">
        <button type="submit">Update</button>
      </div>
    </form>
  </div>
  <br />
  <button class='backlog-button' onclick="window.location.href='/UserDashboard'" >Return to Dashboard</button>
</Layout>