---
import Layout from '../layouts/Layout.astro';
import SignoutButton from '../components/SignoutButton.astro';
import { userInfo, getUserInfo, isLoggedIn, clearUserInfo } from '../components/userInformation.js';
import { XataClient } from '.././xata';

const xata = new XataClient({
  apiKey: import.meta.env.XATA_API_KEY,
  branch: import.meta.env.XATA_BRANCH
});

const { records: hh_user } = await xata.db.hh_user.getPaginated({
  pagination: {
    size: 50
  }
});

console.log("Signed-in User ID:", userInfo.get().id);


if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    
    const updateAge = String(data.get("age"));
    const updateFavHobby = String(data.get("favouriteHobby"));
    const updateBio = String(data.get("bio")); 

    const userAge = parseInt(updateAge);
    
    const user = await xata.db.hh_user.update(userInfo.get().id, {
      age: userAge,
      favourite_hobby: updateFavHobby,
      bio : updateBio
    });

  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}

const signedInUserId = parseInt(userInfo.get().id);
const filteredUser = hh_user.find(user => user.user_id === signedInUserId);

console.log("Filtered User:", filteredUser);

---

<style>
  body {
    background-image: url("../images/background2.gif");
    font-family: Arial, sans-serif;
    background-size: cover;
  }

  .container {
    max-width: 400px;
    margin: 50px auto;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    width: 100%;
    display: flex;
    overflow: auto;
    align-items: center;
    flex-direction: column;
    justify-content: center;
    background-color: #6d7ab7;
  }

  .background {
    width: 100%;
    height: 100vh;
    position: fixed;
    top: 0;
    left: 0;
    z-index: -1;
  }

  label {
    display: block;
    margin-bottom: 8px;
    font-weight: bold;
  }

  button {
    background-color: #4caf50;
    color: #fff;
    padding: 10px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }

  button:hover {
    background-color: #45a049;
  }

  .confirmation {
    color: white;
  }

  .error-message {
    background-color: red;
    color: white;
    padding: 10px;
    border-radius: 4px;
    margin-top: 1px;
    text-align: center;
  }
</style>

<Layout title='Profile'>
  <div class="background"></div>

  <div class="container">
    <h2 style="text-align: center;">Profile</h2>
    <form method="POST">
      <label for="username">Username:</label>
      <input type="text" id="username" name="username" required readonly value={filteredUser ? filteredUser.username : ''}>
      <br /><br />
      <label for="email">Email:</label>
      <input type="email" id="email" name="email" required readonly value={filteredUser ? filteredUser.email_address : ''}>
      <br /><br />
      <label for="phone">Phone Number:</label>
      <input type="number" id="phone" name="phone" value={filteredUser ? filteredUser.phone_number : '' } readonly>
      <br /><br />
      <label for="age">Age:</label>
      <input type="number" id="age" name="age" min="0" value={filteredUser ? filteredUser.age : ''}>
      <br /><br />
      <label for="favouriteHobby">Favorite Hobby:</label>
      <input type="text" id="favouriteHobby" name="favouriteHobby" value={filteredUser ? filteredUser.favourite_hobby : ''}, readonly>
      <br /><br />
      <label for="bio">Bio:</label>
      <textarea id="bio" name="bio" style="width: 100%; height: 100px; resize: none;" rows="4" cols="50" required, value={filteredUser ? filteredUser.bio : ''}></textarea>

      <button type="submit">Update</button>
    </form>
  </div>
</Layout>