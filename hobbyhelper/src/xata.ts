// Generated by Xata Codegen 0.29.1. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "product_category",
    columns: [
      { name: "product_category_id", type: "int" },
      { name: "parent_category_id", type: "int" },
      { name: "category_name", type: "string" },
    ],
  },
  {
    name: "product",
    columns: [
      { name: "product_id", type: "int" },
      { name: "product_name", type: "string" },
      { name: "product_brand", type: "string" },
      { name: "category_id", type: "int" },
      { name: "description", type: "string" },
      { name: "product_image", type: "string" },
    ],
  },
  {
    name: "product_variation",
    columns: [
      { name: "product_variation_id", type: "int" },
      { name: "name", type: "string" },
    ],
  },
  {
    name: "product_variation_option",
    columns: [
      { name: "variation_option_id", type: "int" },
      { name: "product_variation_id", type: "int" },
      { name: "value", type: "string" },
    ],
  },
  {
    name: "product_configuration",
    columns: [
      { name: "product_item_id", type: "int" },
      { name: "variation_option_id", type: "int" },
      { name: "qty_in_stock", type: "int" },
      { name: "price", type: "float" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type ProductCategory = InferredTypes["product_category"];
export type ProductCategoryRecord = ProductCategory & XataRecord;

export type Product = InferredTypes["product"];
export type ProductRecord = Product & XataRecord;

export type ProductVariation = InferredTypes["product_variation"];
export type ProductVariationRecord = ProductVariation & XataRecord;

export type ProductVariationOption = InferredTypes["product_variation_option"];
export type ProductVariationOptionRecord = ProductVariationOption & XataRecord;

export type ProductConfiguration = InferredTypes["product_configuration"];
export type ProductConfigurationRecord = ProductConfiguration & XataRecord;

export type DatabaseSchema = {
  product_category: ProductCategoryRecord;
  product: ProductRecord;
  product_variation: ProductVariationRecord;
  product_variation_option: ProductVariationOptionRecord;
  product_configuration: ProductConfigurationRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Dillon-Irani-s-workspace-b04ur7.us-east-1.xata.sh/db/hobbyHelper",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
